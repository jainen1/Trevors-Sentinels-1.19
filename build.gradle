plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven {
		name = "CurseMaven"
		url "https://www.cursemaven.com"
	}
	maven { url 'https://maven.blamejared.com'}
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven {
		name "KosmX's maven"
		url 'https://maven.kosmx.dev/'
	}
	maven { url 'https://api.modrinth.com/maven' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	// modImplementation "vazkii.patchouli:Patchouli:1.19.2-77-FABRIC"
	modApi "software.bernie.geckolib:${project.gecko_lib}"
	modApi "curse.maven:prism-665526:${project.prism}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi "dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim}"
	modApi "maven.modrinth:better-combat:${project.bettercombat}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

def dataOutput = 'src/main/generated'

loom {
	runs {
		datagen{
			server()

			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file(dataOutput)}"

			runDir "build/datagen"
		}
	}
}

sourceSets { main { resources { srcDirs += dataOutput } } }

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}